@import "colors";

atom-text-editor, :host {
  background-color: @syntax-background-color;
  color: @syntax-text-color;
  .gutter {
    background-color: @syntax-gutter-background-color;
    color: @syntax-gutter-text-color;
    .line-number.cursor-line {
      background-color: @syntax-gutter-background-color-selected;
      color: @syntax-gutter-text-color-selected;
    }
  }
  .cursor-line {
    background-color: fade(@syntax-background-cursor-color, 70%);
    z-index: -100;
  }

  &::shadow{
    .wrap-guide {
      background-color: @syntax-wrap-guide-color;
      opacity: .75;
    }
  }
  .indent-guide {
    color: @syntax-indent-guide-color;
  }
  .invisible-character {
    color: @syntax-invisible-character-color;
  }
  .search-results {
    .marker{
      background-color: transparent;
      border: @syntax-result-marker-color;
      &.current-result {
        border: @syntax-result-marker-color-selected;
      }
    }
  }
  .is-focused {
    .cursor {
      border-color: @syntax-cursor-color;
    }
    .selection {
      .region {
        background-color: @syntax-selection-color;
      }
    }
  }
}

//specific styling

.comment:not(.gfm) { //Keeps CriticMarkup in GFM  from being italics
  font-style: italic;
  color: @tubster-color-comment;
}

.keyword, .storage {
  color: @tubster-color-keyword;
}

.entity.name.function, .keyword.other.name-of-parameter.objc {
  color: @tubster-color-function;
}

.entity.name {
  color: @syntax-text-color;
}

.constant.numeric {
  color: @tubster-color-numeric;
}

.variable.language, .variable.other {
  color: @tubster-color-variable;
}

.constant {
  color: @tubster-color-constant;
}

.variable.other.constant {
  color: @tubster-color-constant;
}

.constant.language {
  color: @tubster-color-variable;
}

.string {
  color: @tubster-color-string;
}

.support.function {
  color: @tubster-color-support-function;
}

.support.type {
  color: @tubster-color-support-function;
}

.support.constant {
  color: @tubster-color-string;
}

.meta.tag, .declaration.tag, .entity.name.tag, .entity.other.attribute-name {
  color: @tubster-color-function;
}

.invalid {
  color: #FFFFFF;
  background-color: #CC0000;
}

.constant.character.escaped, .constant.character.escape, .string .source, .string .source.ruby {
  color: #519F50;
}


.meta.diff.header, .meta.separator.diff, .meta.diff.index, .meta.diff.range {
  background-color: @tubster-color-header;
}


//Hue Rotation

// .embedded {
//     &.coffee { -webkit-filter: hue-rotate(90deg); }
//     &.js { -webkit-filter: hue-rotate(180deg); }
//     &.css { -webkit-filter: hue-rotate(270deg); }
// }

@import "gfm";
@import "html";
@import "less";
@import "yaml";
@import "php";
@import "ruby";
@import "json";
@import "git";
@import "markdown";
