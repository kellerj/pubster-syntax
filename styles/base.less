@import "colors";
@import "gfm";
@import "html";
@import "less";
@import "yaml";
@import "php";
@import "ruby";
@import "json";

atom-text-editor, :host {
  background-color: @syntax-background-color;
  color: @syntax-text-color;
}

atom-text-editor .gutter, :host .gutter {
  background-color: @syntax-gutter-background-color;
  color: @syntax-gutter-text-color;
}

atom-text-editor .gutter .line-number.cursor-line, :host .gutter .line-number.cursor-line {
  background-color: @syntax-gutter-background-color-selected;
  color: @syntax-gutter-text-color-selected;
}

atom-text-editor .cursor-line, :host .cursor-line {
  background-color: @syntax-background-cursor-color;
  z-index: -100;
}

atom-text-editor .gutter .line-number.cursor-line-no-selection, :host .gutter .line-number.cursor-line-no-selection {
  color: @syntax-gutter-text-color-selected;
}

atom-text-editor .wrap-guide, :host .wrap-guide {
  color: @syntax-wrap-guide-color;
  opacity: .75;
}

atom-text-editor .indent-guide, :host .indent-guide {
  color: @syntax-indent-guide-color;
}

atom-text-editor .invisible-character, :host .invisible-character {
  color: @syntax-invisible-character-color;
}

atom-text-editor .search-results .marker .region, :host .search-results .marker .region {
  background-color: transparent;
  border: @syntax-result-marker-color;
}

atom-text-editor .search-results .marker.current-result .region, :host .search-results .marker.current-result .region {
  border: @syntax-result-marker-color-selected;
}

atom-text-editor.is-focused .cursor, :host(.is-focused) .cursor {
  border-color: @syntax-cursor-color;
}

atom-text-editor.is-focused .selection .region, :host(.is-focused) .selection .region {
  background-color: @syntax-selection-color;
}

//specific styling

.comment:not(.gfm) { //Keeps CriticMarkup from being italics
  font-style: italic;
  color: @tubster-color-comment;
}

.keyword, .storage {
  color: @tubster-color-keyword;
}

.entity.name.function, .keyword.other.name-of-parameter.objc {
  color: @tubster-color-function;
}

.entity.name {
  color: @tubster-color-entity;
}

.constant.numeric {
  color: @tubster-color-numeric;
}

.variable.language, .variable.other {
  color: @tubster-color-variable;
}

.constant {
  color: @tubster-color-constant;
}

.variable.other.constant {
  color: @tubster-color-constant;
}

.constant.language {
  color: @tubster-color-variable;
}

.string {
  color: @tubster-color-string;
}

.support.function {
  color: @tubster-color-support-function;
}

.support.type {
  color: @tubster-color-support-function;
}

.support.constant {
  color: @tubster-color-string;
}

.meta.tag, .declaration.tag, .entity.name.tag, .entity.other.attribute-name {
  color: @tubster-color-function;
}

.invalid {
  color: #FFFFFF;
  background-color: #CC0000;
}

.constant.character.escaped, .constant.character.escape, .string .source, .string .source.ruby {
  color: #519F50;
}

.markup.inserted {
  color: @tubster-color-markup-text;
  background-color: #669966;
}

.markup.deleted {
  color: @tubster-color-markup-text;
  background-color: #993333;
}

.meta.diff.header, .meta.separator.diff, .meta.diff.index, .meta.diff.range {
  background-color: @tubster-color-header;
}


//Hue Rotation

.embedded {
    &.coffee { -webkit-filter: hue-rotate(90deg); }
    &.js { -webkit-filter: hue-rotate(180deg); }
    &.css { -webkit-filter: hue-rotate(270deg); }
}
